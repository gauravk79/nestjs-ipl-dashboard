{"version":3,"sources":["components/MatchDetailCard.js","components/MatchSmallCard.js","pages/TeamPage.js","components/YearSelector.js","pages/MatchPage.js","components/TeamImage.js","components/TeamTile.js","pages/HomePage.js","components/HeaderSection.js","App.js","reportWebVitals.js","index.js"],"names":["MatchDetailCard","teamName","match","otherTeam","team1","team2","otherTeamRoute","isMatchWon","matchWinner","date","Date","className","to","toDateString","venue","resultMargin","result","playerOfMatch","umpire1","umpire2","MatchSmallCard","TeamPage","useState","matches","team","setTeam","useParams","useEffect","a","fetch","process","response","json","data","console","log","fetchMatches","title","value","totalMatches","totalWins","color","slice","map","id","YearSelector","selectedYear","years","i","push","year","MatchPage","setMatches","length","TeamImage","imageName","replace","toLowerCase","includes","src","alt","TeamTile","HomePage","teams","setTeams","fetchTeams","HeaderSection","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ef0d9b14.chunk.js","sourcesContent":["import { React } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport \"./MatchDetailCard.scss\";\n\nexport const MatchDetailCard = ({ teamName, match }) => {\n  if (!match) return null;\n  const otherTeam = match.team1 === teamName ? match.team2 : match.team1;\n  const otherTeamRoute = `/teams/${otherTeam}`;\n  const isMatchWon = teamName === match.matchWinner;\n  const date = new Date(match.date);\n\n  return (\n    <div\n      className={\n        isMatchWon ? \"MatchDetailCard  won-card\" : \"MatchDetailCard lost-card\"\n      }\n    >\n      <div>\n        <span className=\"vs\">vs.</span>\n        <h1>\n          <Link to={otherTeamRoute}>{otherTeam}</Link>\n        </h1>\n        <h2 className=\"match-date\">{date.toDateString()}</h2>\n        <h3 className=\"match-venue\">at {match.venue}</h3>\n        <h3 className=\"match-result\">\n          {match.matchWinner} won by {match.resultMargin} {match.result}\n        </h3>\n      </div>\n      <div className=\"additional-detail\">\n        <h3>First Innings</h3>\n        <p>{match.team1}</p>\n        <h3>Second Innings</h3>\n        <p>{match.team2}</p>\n        <h3>Man of the match</h3>\n        <p>{match.playerOfMatch}</p>\n        <h3>Umpires</h3>\n        <p>\n          {match.umpire1}, {match.umpire2}\n        </p>\n      </div>\n    </div>\n  );\n};\n","import { React } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport \"./MatchSmallCard.scss\";\n\nexport const MatchSmallCard = ({ teamName, match }) => {\n  if (!match) return null;\n  const otherTeam = match.team1 === teamName ? match.team2 : match.team1;\n  const otherTeamRoute = `/teams/${otherTeam}`;\n  const isMatchWon = teamName === match.matchWinner;\n\n  return (\n    <div\n      className={\n        isMatchWon ? \"MatchSmallCard won-card\" : \"MatchSmallCard lost-card\"\n      }\n    >\n      <span className=\"vs\">vs.</span>\n      <h3>\n        <Link to={otherTeamRoute}>{otherTeam}</Link>\n      </h3>\n      <p className=\"match-result\">\n        {match.matchWinner} won by {match.resultMargin} {match.result}\n      </p>\n    </div>\n  );\n};\n","import { React, useEffect, useState } from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport { PieChart } from \"react-minimal-pie-chart\";\n\nimport { MatchDetailCard } from \"../components/MatchDetailCard\";\nimport { MatchSmallCard } from \"../components/MatchSmallCard\";\n\nimport \"./TeamPage.scss\";\n\nexport const TeamPage = () => {\n  const [team, setTeam] = useState({ matches: [] });\n  const { teamName } = useParams();\n  const endYear = process.env.REACT_APP_DATA_END_YEAR;\n\n  useEffect(() => {\n    const fetchMatches = async () => {\n      const response = await fetch(\n        `${process.env.REACT_APP_API_ROOT_URL}/teams/${teamName}`\n      );\n      const data = await response.json();\n      console.log(data);\n      setTeam(data);\n    };\n\n    fetchMatches();\n  }, [teamName]);\n\n  if (!team || !team.teamName) {\n    return <h1>Team not found!</h1>;\n  }\n\n  return (\n    <div className=\"TeamPage\">\n      <div className=\"team-name-section\">\n        <h1 className=\"team-name\">{team.teamName}</h1>\n      </div>\n      <div className=\"win-loss-section\">\n        Wins / Losses\n        <PieChart\n          data={[\n            {\n              title: \"Losses\",\n              value: team.totalMatches - team.totalWins,\n              color: \"#e15233\",\n            },\n            { title: \"Wins\", value: team.totalWins, color: \"green\" },\n          ]}\n        />\n      </div>\n      <div className=\"match-detail-section\">\n        <h3>Latest Matches</h3>\n        <MatchDetailCard teamName={team.teamName} match={team.matches[0]} />\n      </div>\n\n      {team.matches.slice(1).map((match) => (\n        <MatchSmallCard teamName={team.teamName} match={match} key={match.id} />\n      ))}\n      <div className=\"more-link\">\n        <Link to={`/teams/${teamName}/matches/${endYear}`}>More ></Link>\n      </div>\n    </div>\n  );\n};\n","import { React } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport \"./YearSelector.scss\";\n\nexport const YearSelector = ({ teamName, selectedYear }) => {\n  let years = [];\n\n  const startYear = process.env.REACT_APP_DATA_START_YEAR;\n  const endYear = process.env.REACT_APP_DATA_END_YEAR;\n\n  for (let i = endYear; i >= startYear; i--) {\n    years.push(i);\n  }\n\n  return (\n    <ol className=\"YearSelector\">\n      {years.map((year) => (\n        <li key={year} className={selectedYear == year ? \"selected-year\" : \"\"}>\n          <Link to={`/teams/${teamName}/matches/${year}`}>{year}</Link>\n        </li>\n      ))}\n    </ol>\n  );\n};\n","import { React, useEffect, useState } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { MatchDetailCard } from \"../components/MatchDetailCard\";\n\nimport \"./MatchPage.scss\";\nimport { YearSelector } from \"../components/YearSelector\";\n\nexport const MatchPage = () => {\n  const [matches, setMatches] = useState([]);\n  const { teamName, year } = useParams();\n\n  useEffect(() => {\n    const fetchMatches = async () => {\n      const response = await fetch(\n        `${process.env.REACT_APP_API_ROOT_URL}/teams/${teamName}/matches?year=${year}`\n      );\n      const data = await response.json();\n      console.log(data);\n      setMatches(data);\n    };\n\n    fetchMatches();\n  }, [teamName, year]);\n\n  return (\n    <div className=\"MatchPage\">\n      <div className=\"year-selector\">\n        <h3>Select Year</h3>\n        <YearSelector teamName={teamName} selectedYear={year} />\n      </div>\n      <div>\n        <h1 className=\"page-heading\">\n          <Link to={`/teams/${teamName}`}>{teamName}</Link> matches in {year}\n        </h1>\n        {matches.length > 0 ? (\n          matches.map((match) => (\n            <MatchDetailCard teamName={teamName} match={match} key={match.id} />\n          ))\n        ) : (\n          <h3>No Matches found!</h3>\n        )}\n      </div>\n    </div>\n  );\n};\n","export const TeamImage = ({ teamName }) => {\n  const pngImages = [\n    \"rising pune supergiant\",\n    \"gujarat lions\",\n    \"pune warriors\",\n    \"kochi tuskers kerala\",\n  ];\n\n  let imageName = teamName.replace(/ /g, \"-\").toLowerCase() + \"-logo\";\n\n  imageName += pngImages.includes(teamName.toLowerCase()) ? \".png\" : \".svg\";\n  console.log(imageName);\n\n  return <img src={`/images/${imageName}`} alt={teamName} />;\n};\n","import { React } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { TeamImage } from \"./TeamImage\";\n\nimport \"./TeamTile.scss\";\n\nexport const TeamTile = ({ teamName }) => {\n  return (\n    <div className=\"TeamTile\">\n      <Link to={`/teams/${teamName}`}>\n        <TeamImage teamName={teamName} />\n        <h2>{teamName}</h2>\n      </Link>\n    </div>\n  );\n};\n","import { React, useEffect, useState } from \"react\";\nimport { TeamTile } from \"../components/TeamTile\";\n\nimport \"./HomePage.scss\";\n\nexport const HomePage = () => {\n  const [teams, setTeams] = useState([]);\n\n  useEffect(() => {\n    const fetchTeams = async () => {\n      const response = await fetch(\n        `${process.env.REACT_APP_API_ROOT_URL}/teams`\n      );\n      const data = await response.json();\n      setTeams(data);\n    };\n\n    fetchTeams();\n  }, []);\n  return (\n    <div className=\"HomePage\">\n      <div className=\"team-grid\">\n        {teams.map((team) => (\n          <TeamTile teamName={team.teamName} key={team.id} />\n        ))}\n      </div>\n    </div>\n  );\n};\n","import { React } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport \"./HeaderSection.scss\";\n\nexport const HeaderSection = () => {\n  return (\n    <div className=\"HeaderSection\">\n      <div>\n        <Link to=\"/\">\n          <img src=\"/images/ipl-logo.svg\" alt=\"Dashboard\" />\n        </Link>\n      </div>\n      <div>\n        <Link to=\"/\">\n          <span>\n            <h1 className=\"app-name\">IPL Cricket Dashbaord</h1>\n          </span>\n        </Link>\n      </div>\n    </div>\n  );\n};\n","import \"./App.scss\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { TeamPage } from \"./pages/TeamPage\";\nimport { MatchPage } from \"./pages/MatchPage\";\nimport { HomePage } from \"./pages/HomePage\";\nimport { HeaderSection } from \"./components/HeaderSection\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <HeaderSection />\n        <Switch>\n          <Route path=\"/teams/:teamName/matches/:year\">\n            <MatchPage />\n          </Route>\n          <Route path=\"/teams/:teamName\">\n            <TeamPage />\n          </Route>\n          <Route path=\"/\">\n            <HomePage />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}